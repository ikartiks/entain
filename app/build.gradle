plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.entain'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.entain"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{
        dataBinding = true
        compose = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.7"
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    //to run Junit5 / jupiter tests
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {

    implementation "androidx.appcompat:appcompat:$versions.appcompat"

    implementation "androidx.cardview:cardview:$versions.cardview"
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerview"
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"

    implementation "com.jakewharton.threetenabp:threetenabp:1.3.1"

    implementation "androidx.multidex:multidex:$versions.multidex"

    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"

    implementation "io.insert-koin:koin-core:$versions.koin"
    implementation "io.insert-koin:koin-android:$versions.koin"
    implementation "io.insert-koin:koin-android-compat:$versions.koin"
    implementation "io.insert-koin:koin-androidx-workmanager:$versions.koin"
    implementation "io.insert-koin:koin-androidx-navigation:$versions.koin"

    // Jetpack Compose
    implementation "io.insert-koin:koin-androidx-compose:$versions.koin"
    implementation "io.insert-koin:koin-ktor:$versions.koin"
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.nav"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.nav"

    //RX
    // for rx retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "io.reactivex.rxjava3:rxkotlin:$versions.rx_kotlin"
    implementation "io.reactivex.rxjava3:rxandroid:$versions.rxandroid"


    //Coroutines start
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    //maybe later
    //https://github.com/Kotlin/kotlinx.coroutines

    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'

    //Coroutines end

    implementation project(":api")
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'
    implementation "androidx.work:work-runtime-ktx:$versions.work_version"



    // Compose start
    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Material Design 3
    implementation 'androidx.compose.material3:material3'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.7.2'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'

    implementation "androidx.navigation:navigation-compose:$versions.nav"

    // Compose end

    //junit 5
    testImplementation("org.junit.jupiter:junit-jupiter-api:$versions.jupiter_junit_5")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$versions.jupiter_junit_5")

    // for InstantTaskExecutorRule
    testImplementation 'androidx.arch.core:core-testing:2.2.0'

    //koin
    testImplementation "io.insert-koin:koin-test:$versions.koin"

    //https://stackoverflow.com/questions/68872301/android-studio-arctic-fox-unable-to-run-junit-configuration-with-mockk
    //mockk for junit
    testImplementation "io.mockk:mockk:$versions.mockk"
    testImplementation "io.mockk:mockk-agent-jvm:$versions.mockk"

    //testImplementation group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: "$versions.kotlin"

    testImplementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0"
    testImplementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"
    testImplementation 'org.threeten:threetenbp:1.5.1'


    //coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"

}